package com.bda.websocket;

import java.io.IOException;

import org.eclipse.jetty.websocket.api.Session;
import org.eclipse.jetty.websocket.api.annotations.OnWebSocketClose;
import org.eclipse.jetty.websocket.api.annotations.OnWebSocketConnect;
import org.eclipse.jetty.websocket.api.annotations.OnWebSocketError;
import org.eclipse.jetty.websocket.api.annotations.OnWebSocketMessage;
import org.eclipse.jetty.websocket.api.annotations.WebSocket;

import com.bda.kafka.BDAKafkaConsumer;

@WebSocket
public class MyWebSocketHandler {
	  private Session session;
	@OnWebSocketClose
    public void onClose(int statusCode, String reason) {
        System.out.println("Close: statusCode=" + statusCode + ", reason=" + reason);
    }

    @OnWebSocketError
    public void onError(Throwable t) {
        System.out.println("Error: " + t.getMessage());
    }

    @OnWebSocketConnect
    public void onConnect(Session session) {
    
        System.out.println("Connect: " + session.getRemoteAddress().getAddress());

        	this.session = session;
//            session.getRemote().sendString("Hello Webbrowser");
       
    }

    @OnWebSocketMessage
    public void onMessage(String message) {
    	BDAKafkaConsumer consumer = new BDAKafkaConsumer();
        
        session.getRemote().sendString(consumer.getMessageCount()+"");
        System.out.println("Message: " + message);
//        System.out.println(consumer.getMessageCount());
    }

}
